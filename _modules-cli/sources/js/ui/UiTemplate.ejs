import { $ } from "@utils/dom";
import { on, off } from "@utils/listener";

const SELECTOR = ".<%= module_slug %>";

class <%= ModuleName %> {
  constructor() {
    this.initialized = false;
    this.el = null;
    this._clickHandle = this._clickHandle.bind(this);
  }

  get name() {
    return `<%= ModuleName %>`;
  }

  init() {
    if (this.initialized) return;

    this.initialized = true;
    this.el = $(SELECTOR);
    this._bindEvents();
  }

  destroy() {
    this._unbindEvents();
    this.el = null;
    this.initialized = false;
  }

  _bindEvents() {
    on(this.el, "click", this._clickHandle);
  }

  _unbindEvents() {
    off(this.el, "click", this._clickHandle);
  }

  _clickHandle(event) {}

}

export default <%= ModuleName %>;
