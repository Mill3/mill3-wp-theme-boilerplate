@use "@mill3-sass-vars/easings";

@mixin ticker($duration: 30s, $direction: normal) {
  animation-name: ticker;
  animation-duration: $duration;
  animation-timing-function: linear;
  animation-fill-mode: both;
  animation-direction: $direction;
  animation-iteration-count: infinite;
  animation-play-state: paused;
}


// FADE IN
@mixin fade($duration: 250ms, $delay: 0ms){
  animation: fadeIn $duration linear $delay backwards;
  animation-play-state: paused;
}
@mixin fadeInView {
  animation-play-state: running;
}

// SCALE UP
@mixin scale($x: 0, $y: 0, $duration: 1500ms, $delay: 0ms, $easing: easings.$easeInOutCubic) {
  --sx: #{$x};
  --sy: #{$y};

  animation: scale $duration $easing $delay backwards;
  animation-play-state: paused;
}
@mixin scaleInView {
  animation-play-state: running;
}

// SCALE UP + FADE IN
@mixin scaleFade($x: 1.1, $y: 1.1, $duration: 1.4s, $delay: 0ms, $easing: easings.$easeOutQuint, $opacityDuration: 300ms) {
  --sx: #{$x};
  --sy: #{$y};

  animation: scale $duration $easing $delay backwards, fadeIn $opacityDuration linear $delay backwards;
  animation-play-state: paused, paused;
}
@mixin scaleFadeInView {
  animation-play-state: running, running;
}

// SLIDE VERTICALLY & HORIZONTALLY
@mixin slide($x: 0px, $y: 40px, $duration: 900ms, $delay: 0ms, $easing: easings.$easeOutCirc) {
  --tx: #{$x};
  --ty: #{$y};

  animation: translate $duration $easing $delay backwards;
  animation-play-state: paused;
}
@mixin slideInView {
  animation-play-state: running;
}

// UNMASK THROUGH CLIP PATH
@mixin clipPath($top: 100%, $bottom: 0%, $left: 0%, $right: 0%, $radius: 0px, $duration: 1.2s, $delay: 0ms, $easing: easings.$easeOutCubic) {
  --top: #{$top};
  --bottom: #{$bottom};
  --left: #{$left};
  --right: #{$right};
  --radius: #{$radius};

  animation: clipPath $duration $easing $delay backwards;
  animation-play-state: paused;
}
@mixin clipPathInView {
  animation-play-state: running;
}

// SLIDE VERTICALLY & HORIZONTALLY + FADE IN
@mixin slideFade($x: 0px, $y: 40px, $duration: 900ms, $delay: 0ms, $easing: easings.$easeOutCirc, $opacityDuration: 250ms) {
  --tx: #{$x};
  --ty: #{$y};

  animation: translate $duration $easing $delay backwards, fadeIn $opacityDuration linear $delay backwards;
  animation-play-state: paused, paused;
}
@mixin slideFadeInView {
  animation-play-state: running, running;
}