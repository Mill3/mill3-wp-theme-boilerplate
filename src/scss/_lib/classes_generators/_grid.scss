@use "../vars/grid" as grid;
@use "../vars/breakpoints" as breakpoints;
@use "../mixins/breakpoints" as bp;
@use "../mixins/variants";

///
/// @group grid
///

/// Set grid template columns
/// Set grid col-start / col-span
///
/// Check [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for amount of columns.
///
/// @name .grid-column-[value]
/// @name .col-start-[value]
/// @name .col-span-[value]
///
/// @example .grid-column-1, .grid-column-md-3, .col-start-1, .col-span-5

// note: keep this line below for SassDoc
// .grid-column-[size] { ... }
// .col-start-[size] { ... }
// .col-span-[size] { ... }

// @include generate-variants(
//   "grid-template-columns",
//   $grid-columns,
//   "grid-column"
// );

@each $breakpoint in map-keys(breakpoints.$grid-breakpoints) {
  @include bp.media-breakpoint-up($breakpoint) {
    $infix: bp.breakpoint-infix($breakpoint, breakpoints.$grid-breakpoints);

    @for $i from 1 through grid.$grid-columns {
      .grid-column#{$infix}-#{$i} {
        grid-template-columns: repeat($i, minmax(0, 1fr));
      }

      .col-start#{$infix}-#{$i} {
        grid-column-start: #{$i};
      }

      .col-span#{$infix}-#{$i} {
        grid-column-end: span #{$i};
      }
    }
  }
}

/// Set grid gap
///
/// Check [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for available values.
///
/// @see {mixin} generate-variants
///
/// @name .grid-gap-[value]
///
/// @example .grid-gap-4, .grid-gap-md-2

// note: keep this line below for SassDoc
// .grid-gap-[size] { ... }
// .row-gap-[size] { ... }
// .column-gap-[size] { ... }

@include variants.generate-variants("grid-gap", grid.$grid-gaps);
@include variants.generate-variants("row-gap", grid.$grid-gaps, 'row-gap');
@include variants.generate-variants("column-gap", grid.$grid-gaps, 'column-gap');


/// Set grid template rows
/// Set grid row-start / row-span
///
/// Check [theme.js](https://github.com/Mill3/mill3-packages/blob/master/packages/system-ui-sass/theme.js) for amount of rows.
///
/// @name .grid-row-[value]
/// @name .row-start-[value]
/// @name .row-span-[value]
///
/// @example .grid-row-1, .grid-row-md-3, .row-start-1, .row-span-5

// note: keep this line below for SassDoc
// .grid-row-[size] { ... }
// .row-start-[size] { ... }
// .row-span-[size] { ... }
@each $breakpoint in map-keys(breakpoints.$grid-breakpoints) {
  @include bp.media-breakpoint-up($breakpoint) {
    $infix: bp.breakpoint-infix($breakpoint, breakpoints.$grid-breakpoints);

    @for $i from 1 through grid.$grid-rows {
      .grid-row#{$infix}-#{$i} {
        grid-template-rows: repeat($i, 1fr);
      }

      .row-start#{$infix}-#{$i} {
        grid-row-start: #{$i};
      }

      .row-span#{$infix}-#{$i} {
        grid-row-end: span #{$i};
      }
    }
  }
}
