@use "@mill3-sass-vars/easings";
@use "@mill3-sass-mixins/mq";
@use "@mixins/animations";

.accordions {
  $self: &;

  --delay: 0ms;
  --stagger: 150ms;

  &__accordion {
    --index: 0;

    &[open] {
      #{$self}__arrowDown {
        animation: AccordionArrowDownLeave 350ms easings.$easeInQuad both;
      }
      #{$self}__arrowUp {
        animation: AccordionArrowUpEnter 450ms 300ms easings.$easeOutCubic both;
      }
      #{$self}__content {
        animation: AccordionContentOpen 650ms 25ms linear both;
      }
    }
  }
  &__btn {
    --self-delay: 300ms;

    grid-template-columns: 1fr auto;

    &::marker { content: ''; }

    @include mq.hoverDevice {
      &:hover {
        #{$self}__arrowDown svg {
          transform: translate3d(0, 4px, 0);
        }
        #{$self}__arrowUp svg {
          transform: translate3d(0, -4px, 0);
        }
      }
    }
  }
  &__arrow {
    --self-delay: 450ms;

    width: 12px;
    height: 13px;

    svg {
      transform: translate3d(0, 0px, 0);
      transition: transform 350ms easings.$easeOutQuad;
    }
  }
  &__arrowDown {
    animation: AccordionArrowDownEnter 450ms 300ms easings.$easeOutCubic both;
  }
  &__arrowUp {
    animation: AccordionArrowUpLeave 350ms easings.$easeInQuad both;
  }

  @include inView {
    #{$self}__btn,
    #{$self}__arrow { @include animations.slideFadeUpInitial; }

    &.is-inview {
      #{$self}__btn,
      #{$self}__arrow { @include animations.slideFadeUp($delay: calc(var(--index) * var(--stagger) + var(--self-delay) + var(--delay))); }
    }
  }
}
