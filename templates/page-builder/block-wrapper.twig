{# 
  Variables injected in context by vendor/palmiak/timber-acf-wp-blocks

  post_id (int) : Post ID
  block (object) : Block data
  fields (object) : Block meta fields (ACF fields)
  slug (string) : Block slug
  is_preview (boolean) : If block rendering is for Admin Panel
  classes (string) : Custom classes for this block (not used by our framework)

  Variables injected in context by lib/gutenberg.php
  first (boolean) : True if block is the first to be rendered in this page.
  order (int) : Block z-index
#}
{% set is_preview = is_preview ?? false %}

{% set order = block.order %}
{% set first = block.first|default(false) %}

{% set effect = fields.effect|default(null) %}
{% set pb_row_id = fields.pb_row_id|default(null) %}
{% set activate_md_breakpoint = fields.activate_md_breakpoint|default(false) %}

{# xs padding #}
{% set pt = fields.pt|default(0) %}
{% set pb = fields.pb|default(0) %}

{# md padding: defaults values to smallest breakpoint #}
{% set pt_md = pt %}
{% set pb_md = pb %}

{# ... or set md_breakpoint when activated #}
{% if activate_md_breakpoint == true %}
  {% set pt_md = fields.pt_md|default(0) %}
  {% set pb_md = fields.pb_md|default(0) %}
{% endif %}

{# lg padding #}
{% set pt_lg = fields.pt_lg|default(0) %}
{% set pb_lg = fields.pb_lg|default(0) %}

{# xs margin #}
{% set mt = fields.mt|default(0) %}
{% set mb = fields.mb|default(0) %}

{# md margin: defaults values to smallest breakpoint #}
{% set mt_md = mt %}
{% set mb_md = mb %}

{# ... or set md_breakpoint when activated #}
{% if activate_md_breakpoint == true %}
  {% set mt_md = fields.mt_md|default(0) %}
  {% set mb_md = fields.mb_md|default(0) %}
{% endif %}

{# lg margin #}
{% set mt_lg = fields.mt_lg|default(0) %}
{% set mb_lg = fields.mb_lg|default(0) %}

{# set lg breakpoint infix to XL when md breakpoints are activated #}
{% if activate_md_breakpoint == true %}
  {% set lg_breakpoint_infix = "xl" %}
{% else %}
  {% set lg_breakpoint_infix = "lg" %}
{% endif %}

{% set row_classname = [] %}
{% set row_styles = ['--zindex:' ~ order] %}

{# create CSS colors variables from ACF stored values #}
{% for color in ['text-color', 'bg-color'] %}
  {% set color_value = fields[color] %}
  {% if color_value %}
    {% set row_styles = row_styles|merge(['--' ~ color ~ ':' ~ color_value ]) %}
    {% set row_classname = row_classname|merge(['--has-' ~ color ]) %}
  {% endif %}
{% endfor %}

{# paddings #}
{% set row_paddings = ['pt-' ~ pt, 'pb-' ~ pb, 'pt-md-' ~ pt_md, 'pb-md-' ~ pb_md, 'pt-' ~ lg_breakpoint_infix ~'-' ~ pt_lg, 'pb-' ~ lg_breakpoint_infix ~'-' ~ pb_lg] %}

{# apply margins only on frontend #}
{% if not is_preview %}
  {% set row_classname = row_classname|merge([
    'mt-' ~ mt,
    'mb-' ~ mb,
    'mt-md-' ~ mt_md,
    'mb-md-' ~ mb_md,
    'mt-' ~ lg_breakpoint_infix ~'-' ~ mt_lg,
    'mb-' ~ lg_breakpoint_infix ~'-' ~ mb_lg
  ]) %}
{% endif %}

{% if fields['bg-color'] %}
  {% set row_classname = row_classname|merge(['--has-bg']) %}
{% endif %}

{% if fields['text-color'] %}
  {% set row_classname = row_classname|merge(['--has-text-color']) %}
{% endif %}

{% if slug %}
  {% set row_classname = row_classname|merge(['--layout-' ~ slug]) %}
{% endif %}

{% if first %}
  {% set row_classname = row_classname|merge(['--first']) %}
{% endif %}

{% if is_preview %}
  {% set row_classname = row_classname|merge(['--is-preview']) %}
{% endif %}



{# ENTIRE MARKUP IS SET HERE #}

{% set row %}

{# create wrapper for reveal effect #}
{% if effect == 'reveal' %}
  {% set pb_row_id = pb_row_id|default('pb_row_wrapper-' ~ random()) %}

  {% set row_open_block %}
    <div
      id="{{ pb_row_id }}"
      class="pb-row-wrapper --effect-reveal position-relative {{ row_classname|join(' ') }}"
      data-scroll-id="{{ pb_row_id }}"
      data-module="pb-row-wrapper-reveal"
      {% if row_styles|length > 0 %}
      style="{{ row_styles|join(";") }}"
      {% endif %}
    >
      <div class="pb-row-wrapper__reveal {{ row_paddings|join(' ') }}">
  {% endset %}

  {% set row_close_block %}
      </div>
    </div>
  {% endset %}

{% else %} {# create default wrapper (no effect) #}

  {% set row_open_block %}
    <div
      {% if pb_row_id %}id="{{ pb_row_id }}"{% endif %}
      class="pb-row-wrapper position-relative {{ row_paddings|join(' ') }} {{ row_classname|join(' ') }}"
      {% if pb_row_id %}data-scroll-id="{{ pb_row_id }}"{% endif %}
      {% if row_styles|length > 0 %}
      style="{{ row_styles|join(";") }}"
      {% endif %}
    >
  {% endset %}

  {% set row_close_block %}
    </div>
  {% endset %}

{% endif %}

{{ row_open_block }}

  {% if is_preview %}
  <div class="acf-block-preview-wrap">
  {% endif %}

  {% block row_wrapper %}{% endblock %}

  {% if is_preview %}
  </div>
  {% endif %}

{{ row_close_block }}

{% endset %}

{# OUTPUT STARTS HERE #}
{% if is_preview and not block.data.is_example %}
  {# in preview mode we can a php function which returns an <iframe> wrapper #}
  {{ function('acf_block_preview', row) }}
{% elseif block.data.is_example %}
  {{ function('acf_block_example', slug) }}
{% else %}
  {{ row }}
{% endif %}
{# OUTPUT ENDS HERE #}
